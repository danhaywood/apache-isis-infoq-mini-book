buildscript {
    repositories {
        jcenter()
        maven {
            name 'rubygems-release'
            url 'http://rubygems-proxy.torquebox.org/releases'
        }
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'com.bluepapa32:gradle-watch-plugin:0.1.5'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
        classpath 'org.jruby:jruby-complete:9.1.2.0'
        classpath "com.github.jruby-gradle:jruby-gradle-plugin:1.0.1"
    }
}

apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'java'

ext {
  jrubyVersion = '9.0.0.0'
}

jruby {
  defaultRepositories = false
  defaultVersion = jrubyVersion
  execVersion = jrubyVersion
}

dependencies {
    gems 'rubygems:asciidoctor-diagram:1.3.1'
}

apply plugin: 'org.asciidoctor.convert'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.bluepapa32.watch'

version = '2.0.0-SNAPSHOT'

asciidoctorj {
    version = '1.5.4.1'
}

import org.asciidoctor.gradle.AsciidoctorTask

def attrs = ['sourcedir'         : '../../../main/webapp',
             'source-highlighter': 'coderay',
             'epub3-stylesdir'   : './styles/epub',
             // NOTE don't include leading ./ because it messes up paths in the epub files
             'imagesdir'         : 'images',
             'toc'               : 'left',
             'icons'             : 'font',
             'sectanchors'       : '',
             'idprefix'          : '',
             'idseparator'       : '-']

tasks.withType(AsciidoctorTask) { task ->
    attributes attrs
    sources {
        include 'index.adoc'
    }
}

task html(type: AsciidoctorTask, description: 'Generates single page HTML') {
    backends 'html5'
}

// NOTE please use ./generate-pdf.sh instead of this task for now
task prepress(type: AsciidoctorTask, description: 'Generates PDF for prepress printing') {
    attributes attrs + ['media' : 'prepress', 'pdfmarks': '', 'pdf-theme': 'infoq-prepress']
    requires file('src/main/ruby/asciidoctor-pdf-extensions.rb')
    backends 'pdf'
    outputDir "$buildDir/asciidoc/pdf-prepress"
    separateOutputDirs false
}

// NOTE please use ./generate-pdf.sh screen instead of this task for now
task pdf(type: AsciidoctorTask, description: 'Generates PDF') {
    attributes attrs + ['pdfmarks': '']
    requires file('src/main/ruby/asciidoctor-pdf-extensions.rb')
    backends 'pdf'
}

task epub(type: AsciidoctorTask, description: 'Generates EPUB3') {
    backends 'epub3'
}

task mobi(type: AsciidoctorTask, description: 'Generates MOBI') {
    backends 'epub3'
    attrs.put('ebook-format', 'kf8')
    attributes attrs
}

pdf.shouldRunAfter html
epub.shouldRunAfter pdf

//task all(dependsOn: ['html', 'pdf', 'epub', 'mobi'])
task all(dependsOn: ['html', 'epub', 'mobi'])

defaultTasks 'all'

watch {
    asciidoc {
        files fileTree(dir: 'src/docs/asciidoc', include: '**/*.adoc')
        tasks 'asciidoctor'
    }
}
